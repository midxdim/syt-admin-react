{"version":3,"file":"static/js/980.f5384afb.chunk.js","mappings":"kOAWO,SAASA,EAAkBC,GAC9B,OAAOC,EAAAA,EAAAA,IAAA,iCAAyDD,IAM7D,SAASE,EAAT,GAA+E,IAAtDC,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,MAAOJ,EAAwC,EAAxCA,QAASK,EAA+B,EAA/BA,QAClD,OAAOJ,EAAAA,EAAAA,IAAA,+CAA+FE,EAA/F,YAAuGC,EAAvG,YAAgHJ,EAAhH,YAA2HK,IAM/H,SAASC,EAAiBN,EAAiBK,EAAiBE,GAC/D,OAAON,EAAAA,EAAAA,IAAA,gDAAwED,EAAxE,YAAmFK,EAAnF,YAA8FE,IAMlG,SAASC,EAAwBC,EAAoBC,GACxD,OAAOT,EAAAA,EAAAA,IAAA,4CAA4DQ,EAA5D,YAA0EC,M,sPC9BjFC,EAAgC,SAAUC,EAAGC,GAC/C,IAAIC,EAAI,GAER,IAAK,IAAIC,KAAKH,EACRI,OAAOC,UAAUC,eAAeC,KAAKP,EAAGG,IAAMF,EAAEO,QAAQL,GAAK,IAAGD,EAAEC,GAAKH,EAAEG,IAG/E,GAAS,MAALH,GAAqD,oBAAjCI,OAAOK,sBAA2C,KAAIC,EAAI,EAAb,IAAgBP,EAAIC,OAAOK,sBAAsBT,GAAIU,EAAIP,EAAEQ,OAAQD,IAClIT,EAAEO,QAAQL,EAAEO,IAAM,GAAKN,OAAOC,UAAUO,qBAAqBL,KAAKP,EAAGG,EAAEO,MAAKR,EAAEC,EAAEO,IAAMV,EAAEG,EAAEO,KAEhG,OAAOR,GAiCT,EA1BmB,SAAsBW,GACvC,IAAIC,EAEAC,EAAqBF,EAAGG,UACxBC,EAAYJ,EAAGI,UACfC,EAAUL,EAAGK,QACbC,EAAWN,EAAGM,SACdC,EAAUP,EAAGO,QACbC,EAAYtB,EAAOc,EAAI,CAAC,YAAa,YAAa,UAAW,WAAY,YAUzEG,GAAYM,EARQC,EAAAA,WAAiBC,EAAAA,IACJF,cAOR,MAAOP,GAChCU,EAAMC,GAAAA,CAAWV,GAAYF,EAAc,IAAIa,EAAAA,EAAAA,GAAgBb,EAAa,GAAGc,OAAOZ,EAAW,eAAe,IAAOW,EAAAA,EAAAA,GAAgBb,EAAa,GAAGc,OAAOZ,EAAW,sBAAuBE,GAAUJ,GAAcG,GAC5N,OAAoBM,EAAAA,cAAoB,QAAQM,EAAAA,EAAAA,GAAS,GAAIR,EAAW,CACtEJ,UAAWQ,EACXL,QATgB,SAAqBnB,GACxB,OAAbkB,QAAkC,IAAbA,GAA+BA,GAAUD,GAClD,OAAZE,QAAgC,IAAZA,GAA8BA,EAAQnB,Q,oBC/B1DF,EAAgC,SAAUC,EAAGC,GAC/C,IAAIC,EAAI,GAER,IAAK,IAAIC,KAAKH,EACRI,OAAOC,UAAUC,eAAeC,KAAKP,EAAGG,IAAMF,EAAEO,QAAQL,GAAK,IAAGD,EAAEC,GAAKH,EAAEG,IAG/E,GAAS,MAALH,GAAqD,oBAAjCI,OAAOK,sBAA2C,KAAIC,EAAI,EAAb,IAAgBP,EAAIC,OAAOK,sBAAsBT,GAAIU,EAAIP,EAAEQ,OAAQD,IAClIT,EAAEO,QAAQL,EAAEO,IAAM,GAAKN,OAAOC,UAAUO,qBAAqBL,KAAKP,EAAGG,EAAEO,MAAKR,EAAEC,EAAEO,IAAMV,EAAEG,EAAEO,KAEhG,OAAOR,GAWL4B,EAAmB,IAAIC,OAAO,KAAKH,OAAOI,EAAAA,EAAAA,KAAsB,KAAM,kBACtEC,EAAyB,IAAIF,OAAO,KAAKH,OAAOM,EAAAA,EAAAA,KAA4B,KAAM,OAElFC,EAAc,SAAqBtB,EAAIuB,GACzC,IAAItB,EAEAC,EAAqBF,EAAGG,UACxBC,EAAYJ,EAAGI,UACfoB,EAAQxB,EAAGwB,MACXC,EAAWzB,EAAGyB,SACdC,EAAO1B,EAAG0B,KACVC,EAAQ3B,EAAG2B,MACXC,EAAU5B,EAAG4B,QACbC,EAAY7B,EAAG6B,UACfC,EAAc9B,EAAG+B,SACjBA,OAA2B,IAAhBD,GAAiCA,EAC5CE,EAAQ9C,EAAOc,EAAI,CAAC,YAAa,YAAa,QAAS,WAAY,OAAQ,QAAS,UAAW,YAAa,aAE5GiC,EAAoBvB,EAAAA,WAAiBC,EAAAA,IACrCF,EAAewB,EAAkBxB,aACjCyB,EAAYD,EAAkBC,UAE9BC,EAAkBzB,EAAAA,UAAe,GACjC0B,GAAmBC,EAAAA,EAAAA,GAAeF,EAAiB,GACnDG,EAAUF,EAAiB,GAC3BG,EAAaH,EAAiB,GAElC1B,EAAAA,WAAgB,WACV,YAAasB,GACfO,EAAWP,EAAMM,WAElB,CAACN,EAAMM,UAEV,IAAIE,EAAgB,WAClB,QAAKb,IAIEV,EAAiBwB,KAAKd,IAAUP,EAAuBqB,KAAKd,KAGjEe,GAAW1B,EAAAA,EAAAA,GAAS,CACtB2B,gBAAiBhB,IAAUa,IAAkBb,OAAQiB,GACpDpB,GAECqB,EAAcL,IACdrC,EAAYM,EAAa,MAAOP,GAChC4C,EAAejC,GAAAA,CAAWV,GAAYF,EAAc,IAAIa,EAAAA,EAAAA,GAAgBb,EAAa,GAAGc,OAAOZ,EAAW,KAAKY,OAAOY,GAAQkB,IAAc/B,EAAAA,EAAAA,GAAgBb,EAAa,GAAGc,OAAOZ,EAAW,cAAewB,IAAUkB,IAAc/B,EAAAA,EAAAA,GAAgBb,EAAa,GAAGc,OAAOZ,EAAW,YAAamC,IAAUxB,EAAAA,EAAAA,GAAgBb,EAAa,GAAGc,OAAOZ,EAAW,QAAuB,QAAd+B,GAAsBjC,GAAcG,GAE7Y2C,EAAmB,SAA0B3D,GAC/CA,EAAE4D,kBACU,OAAZpB,QAAgC,IAAZA,GAA8BA,EAAQxC,GAEtDA,EAAE6D,kBAIA,YAAajB,GACjBO,GAAW,IAkBXW,EAAa,YAAalB,GAASP,GAA8B,MAAlBA,EAAS0B,KACxDC,GAAWC,EAAAA,EAAAA,GAAKrB,EAAO,CAAC,YACxBsB,EAAW5B,GAAQ,KACnB6B,EAAOD,EAAwB5C,EAAAA,cAAoBA,EAAAA,SAAgB,KAAM4C,EAAuB5C,EAAAA,cAAoB,OAAQ,KAAMe,IAAaA,EAC/I+B,EAAuB9C,EAAAA,cAAoB,QAAQM,EAAAA,EAAAA,GAAS,GAAIoC,EAAU,CAC5E7B,IAAKA,EACLnB,UAAW0C,EACXtB,MAAOkB,IACLa,EArBExB,EACKF,EAAyBnB,EAAAA,cAAoB,OAAQ,CAC1DN,UAAW,GAAGW,OAAOZ,EAAW,eAChCI,QAASwC,GACRlB,GAA0BnB,EAAAA,cAAoB+C,EAAAA,EAAe,CAC9DrD,UAAW,GAAGW,OAAOZ,EAAW,eAChCI,QAASwC,IAIN,MAYT,OAAOG,EAA0BxC,EAAAA,cAAoBgD,EAAAA,EAAM,KAAMF,GAAWA,GAG1EG,EAAmBjD,EAAAA,WAAiBY,GACxCqC,EAAIC,YAAc,MAClBD,EAAIE,aAAeA,EACnB,Q,2DC7Ge,SAASC,IACpB,OAAoCC,EAAAA,EAAAA,UAAuB,IAA3D,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCF,EAAAA,EAAAA,UAAmB,IAA3D,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAA8BJ,EAAAA,EAAAA,UAAiB,IAA/C,eAAOnF,EAAP,KAAgBwF,EAAhB,KACA,GAAkCL,EAAAA,EAAAA,UAAgC,IAAlE,eAAOM,EAAP,KAAkBC,EAAlB,KACA,GAA8BP,EAAAA,EAAAA,UAAS,GAAvC,eAAOQ,EAAP,KAAgBC,EAAhB,KACA,GAAgCT,EAAAA,EAAAA,UAAS,GAAzC,eAAOU,EAAP,KAAiBC,EAAjB,KACA,GAA0BX,EAAAA,EAAAA,UAAS,GAAnC,eAAOY,EAAP,KAAcC,EAAd,KACA,GAA8Bb,EAAAA,EAAAA,UAAuB,IAArD,eAAOc,EAAP,KAAgBC,EAAhB,KACA,GAA8Bf,EAAAA,EAAAA,UAAS,IAAvC,eAAOgB,EAAP,KAAgBC,EAAhB,KACA,GAA8BjB,EAAAA,EAAAA,UAAS,IAAvC,gBAAOkB,GAAP,MAAgBC,GAAhB,MACA,IAAgCnB,EAAAA,EAAAA,UAAS,IAAzC,iBAAOjF,GAAP,MAAiBqG,GAAjB,MAGI5G,IADU6G,EAAAA,EAAAA,MAATC,MACwB9G,QACzB+G,IAAWC,EAAAA,EAAAA,MAwEf,OApCAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,+FACVlH,GADU,kEAEUD,EAAAA,EAAAA,IAAkBC,IAF5B,OAEVmH,EAFU,OAGVC,EAASD,EAAYE,KAAI,SAAAC,GAAI,yBAASA,GAAT,IAAeC,UAAU,OAC1D7B,EAAc0B,GACVI,EAAMJ,EAAOC,KAAI,SAAAC,GAAI,OAAIA,EAAKjH,WAClCuF,EAAgB4B,GACZnH,EAAW+G,EAAO,GAAGlE,SAA0B,GAAG7C,QAClDqG,EAAWU,EAAO,GAAGlE,SAA0B,GAAGwD,QACtDb,EAAWxF,GACXsG,GAAWD,GAVG,4CAAH,qDAYfQ,MACD,CAAClH,MACJiH,EAAAA,EAAAA,YAAU,WACN,IAAIC,EAAS,mCAAG,yFACR7G,EADQ,kEAEUH,EAAAA,EAAAA,IAAe,CAACC,KAAM6F,EAAS5F,MAAO8F,EAAUlG,QAAAA,GAASK,QAAAA,IAFnE,OAERyF,EAFQ,OAGZC,EAAaD,EAAU2B,qBACvBpB,EAASP,EAAUM,OACnBK,EAAWX,EAAU4B,QAAQlB,SACzBmB,EAAW7B,EAAU2B,oBAAoB,GAAGlH,SAChDqG,GAAYe,GAPA,4CAAH,qDASbT,MACD,CAAClB,EAAS3F,EAASL,GAASkG,KAC/Be,EAAAA,EAAAA,YAAU,WACN,IAAIC,EAAS,mCAAG,uFACR3G,GADQ,kEAEQD,EAAAA,EAAAA,IAAiBN,GAASK,EAASE,IAF3C,OAER+F,EAFQ,OAGZC,EAAWD,GAHC,2CAAH,qDAKbY,MACD,CAAC7G,EAASL,GAASO,MAGlB,UAAC,IAAD,YAEI,UAAC,IAAD,YACI,UAAC,SAAD,4BAAsBiG,MACtB,SAAC,SAAD,UACKE,MAEL,SAAC,SAAD,UACKnG,SAGT,gBAAKsB,UAAU,UAEf,UAAC,IAAD,CAAK+F,OAAQ,GAAb,WAEI,SAAC,IAAD,CAAKC,KAAM,EAAX,UACI,gBAAK5E,MAAO,CAAC6E,OAAQ,iBAAkBC,OAAQ,sBAAuBC,UAAU,UAAhF,UACI,SAAC,IAAD,CACIrC,aAAcA,EACdsC,aAAc,CAAC5H,GACf6H,mBAAoB,CAAC,QAAS,SAC9BC,WAAY,CAAEC,MAAO,UAAWC,IAAK,WAGrCC,SAAU7C,EACV8C,SAAQ,mCAAE,WAAOC,EAAaC,GAApB,iEACN5C,EAAW4C,EAAKC,KAAKrI,SACrBsG,GAAW8B,EAAKC,KAAKhC,SAFf,2CAAF,+DASpB,UAAC,IAAD,CAAKmB,KAAM,GAAX,WAEI,yBACK/B,EAAUuB,KAAI,SAACC,EAAMqB,GAAP,OAAiB,UAAC,EAAD,CACxBvF,MAAOkE,EAAK/G,WAAaA,GAAU,QAAS,GAE5C0C,MAAO,CAAC2F,OAAQ,WAChB5G,SAAO,iBAAE,8EACL4E,GAAYU,EAAK/G,UADZ,2CAJe,WAQ5B,2BAAM+G,EAAK/G,SAAX,IAAsB+G,EAAKuB,cAC3B,2BAAMvB,EAAKwB,gBAAX,MAA+BxB,EAAKyB,oBAP3BJ,SAYjB,gBAAK9G,UAAU,UAEf,SAAC,IAAD,CACImE,QAASA,EACTI,MAAOA,EACPF,SAAUA,EACV8C,iBAAiB,EACjBjH,SAAU,SAAC5B,EAAM+F,GACbD,EAAW9F,GACXgG,EAAYD,OAGpB,gBAAKrE,UAAU,UAEf,SAAC,IAAD,CAAOoH,OAAQ,KAAMC,QAvIE,CACnC,CACId,MAAO,eACPe,OAAQ,SAACC,EAAGC,EAAQV,GAChB,OAAOA,EAAQ,IAGvB,CACIP,MAAO,eACPkB,UAAW,SAEf,CACIlB,MAAO,2BACPkB,UAAW,YAEf,CACIlB,MAAO,2BACPkB,UAAW,kBAEf,CACIlB,MAAO,iCACPkB,UAAW,mBAEf,CACIlB,MAAO,qBACPkB,UAAW,UAEf,CACIlB,MAAO,2BACPkB,UAAW,UA0GoCC,WAAYjD,EAASkD,YAAY,EAAOC,UAAQ,KACvF,gBAAK5H,UAAU,UACf,SAAC,IAAD,CAAQG,QAAS,WACb+E,IAAU,IADd","sources":["api/hospital/hospitalSchedule.ts","../node_modules/antd/es/tag/CheckableTag.js","../node_modules/antd/es/tag/index.js","pages/hospital/hospitalList/hospitalSchedule/index.tsx"],"sourcesContent":["import {request} from \"@utils/http\";\nimport {\n    Department,\n    DoctorItem,\n    ReqGetScheduleParams,\n    ReqScheduleResponse\n} from \"@api/hospital/model/hospitalScheduleTypes\";\n\n/**\n * 获取某个医院所有的科室\n */\nexport function reqGetDepartments(hoscode: string){\n    return request.get<any, Department[]>(`/admin/hosp/department/${hoscode}`);\n}\n\n/**\n * 获取排班规则\n */\nexport function reqGetSchedule({page, limit, hoscode, depcode}: ReqGetScheduleParams){\n    return request.get<ReqGetScheduleParams, ReqScheduleResponse>(`/admin/hosp/schedule/getScheduleRule/${page}/${limit}/${hoscode}/${depcode}`);\n}\n\n/**\n * 获取医生列表\n */\nexport function reqGetDoctorList(hoscode: string, depcode: string, workDate: string){\n    return request.get<any, DoctorItem[]>(`/admin/hosp/schedule/findScheduleList/${hoscode}/${depcode}/${workDate}`);\n}\n\n/**\n * 上下线排班\n */\nexport function reqUpdateScheduleStatus(scheduleId: string, status: number){\n    return request.get<any, null>(`/admin/hosp/hospital/updateStatus/${scheduleId}/${status}`);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\n\nvar CheckableTag = function CheckableTag(_a) {\n  var _classNames;\n\n  var customizePrefixCls = _a.prefixCls,\n      className = _a.className,\n      checked = _a.checked,\n      onChange = _a.onChange,\n      onClick = _a.onClick,\n      restProps = __rest(_a, [\"prefixCls\", \"className\", \"checked\", \"onChange\", \"onClick\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var handleClick = function handleClick(e) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(!checked);\n    onClick === null || onClick === void 0 ? void 0 : onClick(e);\n  };\n\n  var prefixCls = getPrefixCls('tag', customizePrefixCls);\n  var cls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-checkable\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-checkable-checked\"), checked), _classNames), className);\n  return /*#__PURE__*/React.createElement(\"span\", _extends({}, restProps, {\n    className: cls,\n    onClick: handleClick\n  }));\n};\n\nexport default CheckableTag;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport CheckableTag from './CheckableTag';\nimport { ConfigContext } from '../config-provider';\nimport { PresetColorTypes, PresetStatusColorTypes } from '../_util/colors';\nimport Wave from '../_util/wave';\nvar PresetColorRegex = new RegExp(\"^(\".concat(PresetColorTypes.join('|'), \")(-inverse)?$\"));\nvar PresetStatusColorRegex = new RegExp(\"^(\".concat(PresetStatusColorTypes.join('|'), \")$\"));\n\nvar InternalTag = function InternalTag(_a, ref) {\n  var _classNames;\n\n  var customizePrefixCls = _a.prefixCls,\n      className = _a.className,\n      style = _a.style,\n      children = _a.children,\n      icon = _a.icon,\n      color = _a.color,\n      onClose = _a.onClose,\n      closeIcon = _a.closeIcon,\n      _a$closable = _a.closable,\n      closable = _a$closable === void 0 ? false : _a$closable,\n      props = __rest(_a, [\"prefixCls\", \"className\", \"style\", \"children\", \"icon\", \"color\", \"onClose\", \"closeIcon\", \"closable\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  React.useEffect(function () {\n    if ('visible' in props) {\n      setVisible(props.visible);\n    }\n  }, [props.visible]);\n\n  var isPresetColor = function isPresetColor() {\n    if (!color) {\n      return false;\n    }\n\n    return PresetColorRegex.test(color) || PresetStatusColorRegex.test(color);\n  };\n\n  var tagStyle = _extends({\n    backgroundColor: color && !isPresetColor() ? color : undefined\n  }, style);\n\n  var presetColor = isPresetColor();\n  var prefixCls = getPrefixCls('tag', customizePrefixCls);\n  var tagClassName = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(color), presetColor), _defineProperty(_classNames, \"\".concat(prefixCls, \"-has-color\"), color && !presetColor), _defineProperty(_classNames, \"\".concat(prefixCls, \"-hidden\"), !visible), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n\n  var handleCloseClick = function handleCloseClick(e) {\n    e.stopPropagation();\n    onClose === null || onClose === void 0 ? void 0 : onClose(e);\n\n    if (e.defaultPrevented) {\n      return;\n    }\n\n    if (!('visible' in props)) {\n      setVisible(false);\n    }\n  };\n\n  var renderCloseIcon = function renderCloseIcon() {\n    if (closable) {\n      return closeIcon ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        onClick: handleCloseClick\n      }, closeIcon) : /*#__PURE__*/React.createElement(CloseOutlined, {\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        onClick: handleCloseClick\n      });\n    }\n\n    return null;\n  };\n\n  var isNeedWave = 'onClick' in props || children && children.type === 'a';\n  var tagProps = omit(props, ['visible']);\n  var iconNode = icon || null;\n  var kids = iconNode ? /*#__PURE__*/React.createElement(React.Fragment, null, iconNode, /*#__PURE__*/React.createElement(\"span\", null, children)) : children;\n  var tagNode = /*#__PURE__*/React.createElement(\"span\", _extends({}, tagProps, {\n    ref: ref,\n    className: tagClassName,\n    style: tagStyle\n  }), kids, renderCloseIcon());\n  return isNeedWave ? /*#__PURE__*/React.createElement(Wave, null, tagNode) : tagNode;\n};\n\nvar Tag = /*#__PURE__*/React.forwardRef(InternalTag);\nTag.displayName = 'Tag';\nTag.CheckableTag = CheckableTag;\nexport default Tag;","import {Breadcrumb, Button, Card, Col, Pagination, Row, Table, Tag, Tree} from \"antd\";\nimport React, {useEffect, useState} from \"react\";\nimport {BookingScheduleItem, Department, DoctorItem} from \"@api/hospital/model/hospitalScheduleTypes\";\nimport {ColumnsType} from \"antd/lib/table\";\nimport {reqGetDepartments, reqGetDoctorList, reqGetSchedule} from \"@api/hospital/hospitalSchedule\";\nimport {useLocation, useNavigate} from \"react-router-dom\";\n\nexport default function HospitalSchedule() {\n    const [department, setDepartment] = useState<Department[]>([]);\n    const [expandedKeys, setExpandedKeys] = useState<string[]>([]);\n    const [depcode, setDepcode] = useState<string>(\"\");\n    const [schedules, setSchedules] = useState<BookingScheduleItem[]>([]);\n    const [current, setCurrent] = useState(1);\n    const [pageSize, setPageSize] = useState(5);\n    const [total, setTotal] = useState(0);\n    const [doctors, setDoctors] = useState<DoctorItem[]>([]);\n    const [hosname, setHosname] = useState(\"\");\n    const [depname, setDepname] = useState(\"\");\n    const [workDate, setWorkDate] = useState(\"\");\n\n    let {state} = useLocation();\n    let hoscode = (state as any).hoscode;\n    let navigate = useNavigate();\n\n    //定义表格的结构\n    let columns: ColumnsType<DoctorItem> = [\n        {\n            title: \"序号\",\n            render: (_, record, index) => {\n                return index + 1;\n            }\n        },\n        {\n            title: \"职称\",\n            dataIndex: \"title\"\n        },\n        {\n            title: \"号源时间\",\n            dataIndex: \"workDate\"\n        },\n        {\n            title: \"总预约数\",\n            dataIndex: \"reservedNumber\"\n        },\n        {\n            title: \"剩余预约数\",\n            dataIndex: \"availableNumber\"\n        },\n        {\n            title: \"挂号费\",\n            dataIndex: \"amount\"\n        },\n        {\n            title: \"擅长技能\",\n            dataIndex: \"skill\"\n        }\n    ];\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if(!hoscode) return;\n            let departments = await reqGetDepartments(hoscode);\n            let result = departments.map(item => ({...item, disabled: true}));\n            setDepartment(result);\n            let ids = result.map(item => item.depcode);\n            setExpandedKeys(ids);\n            let depcode = (result[0].children as Department[])[0].depcode;\n            let depname = (result[0].children as Department[])[0].depname;\n            setDepcode(depcode);\n            setDepname(depname);\n        };\n        fetchData();\n    }, [hoscode]);\n    useEffect(() => {\n        let fetchData = async () => {\n            if(!depcode) return;\n            let schedules = await reqGetSchedule({page: current, limit: pageSize, hoscode, depcode});\n            setSchedules(schedules.bookingScheduleList);\n            setTotal(schedules.total);\n            setHosname(schedules.baseMap.hosname);\n            let workData = schedules.bookingScheduleList[0].workDate;\n            setWorkDate(workData);\n        };\n        fetchData();\n    }, [current, depcode, hoscode, pageSize]);\n    useEffect(() => {\n        let fetchData = async () => {\n            if(!workDate) return;\n            let doctors = await reqGetDoctorList(hoscode, depcode, workDate);\n            setDoctors(doctors);\n        };\n        fetchData();\n    }, [depcode, hoscode, workDate]);\n\n    return (\n        <Card>\n            {/* 路径导航 */}\n            <Breadcrumb>\n                <Breadcrumb.Item>选择: {hosname}</Breadcrumb.Item>\n                <Breadcrumb.Item>\n                    {depname}\n                </Breadcrumb.Item>\n                <Breadcrumb.Item>\n                    {workDate}\n                </Breadcrumb.Item>\n            </Breadcrumb>\n            <div className=\"h-20\"></div>\n            {/* 内容区 */}\n            <Row gutter={30}>\n                {/* 左侧列 */}\n                <Col span={5} >\n                    <div style={{border: \"solid 1px #ddd\", height: \"calc(100vh - 200px)\", overflowY:\"scroll\"}}>\n                        <Tree\n                            expandedKeys={expandedKeys}\n                            selectedKeys={[depcode]}\n                            defaultCheckedKeys={[\"0-0-0\", \"0-0-1\"]}\n                            fieldNames={{ title: \"depname\", key: \"depcode\" }}\n                            // onSelect={onSelect}\n                            // onCheck={onCheck}\n                            treeData={department as []}\n                            onSelect={async (selectedKey, info:any) => {\n                                setDepcode(info.node.depcode);\n                                setDepname(info.node.depname);\n                            }}\n                        />\n                    </div>\n                </Col>\n\n                {/* 右侧列 */}\n                <Col span={19}>\n                    {/* 排班日期列表 */}\n                    <div>\n                        {schedules.map((item, index) => <Tag\n                                color={item.workDate === workDate? \"green\": \"\"}\n                                key={index}\n                                style={{cursor: \"pointer\"}}\n                                onClick={async () => {\n                                    setWorkDate(item.workDate);\n                                }}\n                            >\n                            <div>{item.workDate} {item.dayOfWeek}</div>\n                            <div>{item.availableNumber} / {item.reservedNumber}</div>\n                        </Tag>\n                        )}\n\n                    </div>\n                    <div className=\"h-20\"></div>\n                    {/* 分页结构 */}\n                    <Pagination\n                        current={current}\n                        total={total}\n                        pageSize={pageSize}\n                        showSizeChanger={true}\n                        onChange={(page, pageSize) => {\n                            setCurrent(page);\n                            setPageSize(pageSize);\n                        }}\n                    />\n                    <div className=\"h-20\"></div>\n                    {/* 表格结构 */}\n                    <Table rowKey={\"id\"} columns={columns} dataSource={doctors} pagination={false} bordered />\n                    <div className=\"h-20\"></div>\n                    <Button onClick={() => {\n                        navigate(-1);\n                    }}>返回</Button>\n                </Col>\n            </Row>\n        </Card>\n    );\n}\n"],"names":["reqGetDepartments","hoscode","request","reqGetSchedule","page","limit","depcode","reqGetDoctorList","workDate","reqUpdateScheduleStatus","scheduleId","status","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","_a","_classNames","customizePrefixCls","prefixCls","className","checked","onChange","onClick","restProps","getPrefixCls","React","ConfigContext","cls","classNames","_defineProperty","concat","_extends","PresetColorRegex","RegExp","PresetColorTypes","PresetStatusColorRegex","PresetStatusColorTypes","InternalTag","ref","style","children","icon","color","onClose","closeIcon","_a$closable","closable","props","_React$useContext","direction","_React$useState","_React$useState2","_slicedToArray","visible","setVisible","isPresetColor","test","tagStyle","backgroundColor","undefined","presetColor","tagClassName","handleCloseClick","stopPropagation","defaultPrevented","isNeedWave","type","tagProps","omit","iconNode","kids","tagNode","CloseOutlined","Wave","Tag","displayName","CheckableTag","HospitalSchedule","useState","department","setDepartment","expandedKeys","setExpandedKeys","setDepcode","schedules","setSchedules","current","setCurrent","pageSize","setPageSize","total","setTotal","doctors","setDoctors","hosname","setHosname","depname","setDepname","setWorkDate","useLocation","state","navigate","useNavigate","useEffect","fetchData","departments","result","map","item","disabled","ids","bookingScheduleList","baseMap","workData","gutter","span","border","height","overflowY","selectedKeys","defaultCheckedKeys","fieldNames","title","key","treeData","onSelect","selectedKey","info","node","index","cursor","dayOfWeek","availableNumber","reservedNumber","showSizeChanger","rowKey","columns","render","_","record","dataIndex","dataSource","pagination","bordered"],"sourceRoot":""}